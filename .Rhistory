library(DataCE)
data("Data_Wide")
Data_Wide
library(DataCE)
system.file("extdata", "2012.csv", package = "dataCE")
system.file("extdata", "Data_Wide.csv", package = "dataCE")
?system.file
system.file(package = "dataCE")
system.file(package = "DataCE")
system.file("extdata", "Data_Wide.csv",package = "DataCE")
d <- fread("inst/extdata/Data_Wide.csv")
library(data.table)
d <- fread("inst/extdata/Data_Wide.csv")
choices <- d[, .(id, choiceset, choice, age, house_inc)]
View(choices)
set <- unique(d[, .(choiceset,
quality_1, quality_2, quality_3,
angling_1, angling_2, angling_3,
access_1, access_2, access_3,
surround_1, surround_2, surround_3,
price_1, price_2, price_3)])
View(set)
library(data.table)
d <- fread("inst/extdata/DataOdense.csv")
View(d)
library(data.table)
data <- fread("inst/extdata/DataOdense.csv")
###########################################################
# Identification/removal of protesters, strategic bidders #
# - finding effective response rate                       #
###########################################################
data$prot_ce<-replace(data$prot_ce,is.na(data$prot_ce),0)
data$prot_ce1<-ifelse(data$prot_ce==5 | data$prot_ce==9 | data$prot_ce==10 | data$prot_ce==11 | data$prot_ce==12 | data$prot_ce==13,1,0)
table(data$prot_ce1)
data$strat_ce<-replace(data$strat_ce,is.na(data$strat_ce),0)
data$strat_ce1<-ifelse(data$strat_ce==2 | data$strat_ce==6,1,0)
table(data$strat_ce1)
data<-subset(data,complete==1)
data<-subset(data,data$prot_ce1==0)
data<-subset(data,data$strat_ce1==0)
View(data)
View(data)
d <- data[, .(id, obs_id, block, choiceset, alt, choice, qualgree,
qualblue, qualyell, angling, access, surroing, price, gender,
age, user, user_freq, distance, anglers, edu, house_inc)]
d <- data[, .(id, obs_id, block, choiceset, alt, choice, qualgree,
qualblue, qualyell, angling, access, surround, price, gender,
age, user, user_freq, distance, anglers, edu, house_inc)]
#change qualgree, qualblue and qualyell into unique variable
d[, .(qualgree, qualblue, qualyell)]
#change qualgree, qualblue and qualyell into unique variable
rowSums(d[, .(qualgree, qualblue, qualyell)])
#change qualgree, qualblue and qualyell into unique variable
sum(rowSums(d[, .(qualgree, qualblue, qualyell)]>1))
#change qualgree, qualblue and qualyell into unique variable
d[, .(qualgree, qualblue, qualyell)]
#change qualgree, qualblue and qualyell into unique variable
sum(d[, .(qualgree, qualblue, qualyell)]==0
#change qualgree, qualblue and qualyell into unique variable
sum(d[, .(qualgree, qualblue, qualyell)])==0
#change qualgree, qualblue and qualyell into unique variable
sum(d[, .(qualgree, qualblue, qualyell)]==0)
#change qualgree, qualblue and qualyell into unique variable
d[, .(qualgree, qualblue, qualyell)==0
#change qualgree, qualblue and qualyell into unique variable
d[, .(qualgree, qualblue, qualyell)]==0
#change qualgree, qualblue and qualyell into unique variable
rowSums(d[, .(qualgree, qualblue, qualyell)])==0
#change qualgree, qualblue and qualyell into unique variable
sum(rowSums(d[, .(qualgree, qualblue, qualyell)])==0)
#change qualgree, qualblue and qualyell into unique variable
sum(rowSums(d[, .(qualgree, qualblue, qualyell)])==1)
#change qualgree, qualblue and qualyell into unique variable
sum(rowSums(d[, .(qualgree, qualblue, qualyell)])==2)
#change qualgree, qualblue and qualyell into unique variable
d[sum(rowSums(d[, .(qualgree, qualblue, qualyell)])==2), .(qualgree, qualblue, qualyell)]
#change qualgree, qualblue and qualyell into unique variable
d[rowSums(d[, .(qualgree, qualblue, qualyell)])==2, .(qualgree, qualblue, qualyell)]
d$qualblue <- ifelse(d$qualblue ==2, 1, d$qualblue)
d[rowSums(d[, .(qualgree, qualblue, qualyell)])==2, .(qualgree, qualblue, qualyell)]
#order Red, Yellow, Green, Blue
d$Quality <- 0
d$Quality <- ifelse(d$qualyell==1, 1, d$Quality)
d$Quality <- ifelse(d$qualgree==1, 2, d$Quality)
d$Quality <- ifelse(d$qualblue==1, 3, d$Quality)
d$Quality
library(data.table)
data <- fread("inst/extdata/DataOdense.csv")
###########################################################
# Identification/removal of protesters, strategic bidders #
# - finding effective response rate                       #
###########################################################
data$prot_ce<-replace(data$prot_ce,is.na(data$prot_ce),0)
data$prot_ce1<-ifelse(data$prot_ce==5 | data$prot_ce==9 | data$prot_ce==10 | data$prot_ce==11 | data$prot_ce==12 | data$prot_ce==13,1,0)
table(data$prot_ce1)
data$strat_ce<-replace(data$strat_ce,is.na(data$strat_ce),0)
data$strat_ce1<-ifelse(data$strat_ce==2 | data$strat_ce==6,1,0)
table(data$strat_ce1)
data<-subset(data,complete==1)
data<-subset(data,data$prot_ce1==0)
data<-subset(data,data$strat_ce1==0)
d <- data[, .(id, obs_id, block, choiceset, alt, choice, qualgree,
qualblue, qualyell, angling, access, surround, price, gender,
age, user, user_freq, distance, anglers, edu, house_inc)]
#change qualgree, qualblue and qualyell into unique variable
d$qualblue <- ifelse(d$qualblue ==2, 1, d$qualblue)  ## Correct the 2 into 1 pour qualblue
#order Red, Yellow, Green, Blue
d$quality <- 0
d$quality <- ifelse(d$qualyell==1, 1, d$Quality)
d$quality <- ifelse(d$qualgree==1, 2, d$Quality)
d$quality <- ifelse(d$qualblue==1, 3, d$Quality)
d <- d[, .(id, obs_id, block, choiceset, alt, choice, quality,
angling, access, surround, price, gender,
age, user, user_freq, distance, anglers, edu, house_inc)]
library(data.table)
data <- fread("inst/extdata/DataOdense.csv")
###########################################################
# Identification/removal of protesters, strategic bidders #
# - finding effective response rate                       #
###########################################################
data$prot_ce<-replace(data$prot_ce,is.na(data$prot_ce),0)
data$prot_ce1<-ifelse(data$prot_ce==5 | data$prot_ce==9 | data$prot_ce==10 | data$prot_ce==11 | data$prot_ce==12 | data$prot_ce==13,1,0)
table(data$prot_ce1)
data$strat_ce<-replace(data$strat_ce,is.na(data$strat_ce),0)
data$strat_ce1<-ifelse(data$strat_ce==2 | data$strat_ce==6,1,0)
table(data$strat_ce1)
data<-subset(data,complete==1)
data<-subset(data,data$prot_ce1==0)
data<-subset(data,data$strat_ce1==0)
d <- data[, .(id, obs_id, block, choiceset, alt, choice, qualgree,
qualblue, qualyell, angling, access, surround, price, gender,
age, user, user_freq, distance, anglers, edu, house_inc)]
d$qualblue <- ifelse(d$qualblue ==2, 1, d$qualblue)  ## Correct the 2 into 1 pour qualblue
#order Red, Yellow, Green, Blue
d$quality <- 0
d$quality <- ifelse(d$qualyell==1, 1, d$quality)
d$quality <- ifelse(d$qualgree==1, 2, d$quality)
d$quality <- ifelse(d$qualblue==1, 3, d$quality)
d <- d[, .(id, obs_id, block, choiceset, alt, choice, quality,
angling, access, surround, price, gender,
age, user, user_freq, distance, anglers, edu, house_inc)]
View(d)
## Transform the data into wide format
dw <-
? dcast
?dcast
## Transform the data into wide format
dcast(d, . ~ alt, fun=identity, value.var("quality"))
## Transform the data into wide format
dcast(d, . ~ alt, fun=identity, value.var=c("quality"))
## Transform the data into wide format
dcast(d, id+obs_id ~ alt, fun=identity, value.var=c("quality"))
## Transform the data into wide format
dcast(d, id+obs_id ~ alt, value.var=c("quality"))
## Transform the data into wide format
dcast(d, id+obs_id ~ quality, value.var=c("quality"))
## Transform the data into wide format
dcast(d, id+obs_id+ choice ~ alt,  value.var=c("quality"))
## Transform the data into wide format
dcast(d, alt ~ id+obs_id+ choice ,  value.var=c("quality"))
## Transform the data into wide format
dcast(d, id+obs_id ~alt ,  value.var=c("quality", angling))
## Transform the data into wide format
dcast(d, id+obs_id ~alt ,  value.var=c("quality", "angling"))
## Transform the data into wide format
dcast(d, id+obs_id + choice~alt ,  value.var=c("quality", "angling"))
## Transform the data into wide format
dcast(d, id+obs_id + choiceset~alt ,  value.var=c("quality", "angling"))
## Transform the data into wide format
dcast(d, id+obs_id + block+choiceset~alt ,  value.var=c("quality", "angling"))
## Transform the data into wide format
dw <- dcast(d, id+obs_id + block+choiceset~alt ,  value.var=c("quality", "angling"))
View(dw)
dw <- dw[order(id, block, choiceset),]
View(dw)
## Transform the data into wide format
dw <- dcast(d, id+obs_id + block+choiceset+choice~alt ,  value.var=c("quality", "angling"))
dw <- dw[order(id, block, choiceset),]
View(dw)
dw <- dcast(d, id+obs_id + block+choiceset~alt ,  value.var=c("quality", "angling",
"access", "surround",
"price"))
dw <- dcast(d, id+obs_id + block+choiceset~alt ,  value.var=c("quality", "angling",
"access", "surround",
"price"))
dw <- dw[order(id, block, choiceset),]
View(dw)
dw <- dcast(d, id+obs_id + block+choiceset+choice~alt ,  value.var=c("quality", "angling",
"access", "surround",
"price"))
dw <- dw[order(id, block, choiceset),]
View(dw)
dw <- dcast(d, id+obs_id + block+choiceset+ age~alt ,  value.var=c("quality", "angling",
"access", "surround",
"price"))
dw <- dw[order(id, block, choiceset),]
View(dw)
dw <- dcast(d, id+obs_id + block+choiceset+ age~alt ,  value.var=c("choice",
"quality", "angling", "access", "surround", "price"))
dw <- dw[order(id, block, choiceset),]
View(dw)
dw <- dcast(d, id+obs_id + block+choiceset+ age+ user+ user_freq + distance + anglers +
edu + house_inc ~alt ,  value.var=c("choice",
"quality", "angling", "access", "surround", "price"))
dw <- dw[order(id, block, choiceset),]
View(dw)
View(dw)
dw$choice <- 0
dw$choice <- ifelse(dw$choice_1==1, 1, dw$choice)
dw$choice <- ifelse(dw$choice_2==1, 2, dw$choice)
dw$choice <- ifelse(dw$choice_3==1, 3, dw$choice)
dw$choice
dw$choice_1 <- NULL
dw$choice_2 <- NULL
dw$choice_3 <- NULL
View(dw)
choices <- dw[,.(id, obs_id, block, choiceset, choice, age,
user, user_freq, distance, anglers, edu, house_inc)]
write.csv(choices, "inst/extdata/choices.csv")
sets <- unique(dw[,.(block, choiceset, quality_1, angling_1, access_1, surround_1, price_1,
quality_2, angling_2, access_2, surround_2, price_2,
quality_3, angling_3, access_3, surround_3, price_3,)])
sets <- unique(dw[,.(block, choiceset, quality_1, angling_1, access_1, surround_1, price_1,
quality_2, angling_2, access_2, surround_2, price_2,
quality_3, angling_3, access_3, surround_3, price_3)])
View(sets)
write.csv(sets, "inst/extdata/sets.csv")
